knitr::opts_chunk$set(echo = TRUE)
library(tidyverse)
library(lubridate)
energy <- read_delim("/Users/bing/Desktop/household_power_consumption.txt", delim=";",
col_types=cols( Date = col_date(format="%d/%m/%Y"))
)
energy <- na.omit(energy)
energySum <- energy %>% filter(hour(Time) > 8 & hour(Time) < 22) %>% filter(month(Date) > 3 & month(Date) < 10) %>% group_by(Date) %>% summarise(GAP = mean(Global_active_power))
energyWint <- energy %>% filter(hour(Time) > 8 & hour(Time) < 22) %>% filter(xor(month(Date) < 4, month(Date) > 9)) %>% group_by(Date) %>% summarise(GAP = mean(Global_active_power))
energySum <- cbind(energySum, "time"=1:nrow(energySum))
energySum
#ggplot(data = energySum) + geom_point(mapping = aes(x = time, y = GAP))
model = lm(GAP ~ time, data = energySum)
#plot(GAP ~ observation, data = energySum)
#abline(model)
energyWint
energyWint <- cbind(energyWint, "time"=1:nrow(energyWint))
#ggplot(data = energyWint) + geom_point(mapping = aes(x = time, y = GAP))
model2 = lm(GAP ~ time, data = energyWint)
plot(GAP ~ time, data = energyWint, xaxt=Date)
library(lubridate)
energy <- read_delim("/Users/bing/Desktop/household_power_consumption.txt", delim=";",
col_types=cols( Date = col_date(format="%d/%m/%Y"))
)
energy <- na.omit(energy)
energySum <- energy %>% filter(hour(Time) > 8 & hour(Time) < 22) %>% filter(month(Date) > 3 & month(Date) < 10) %>% group_by(Date) %>% summarise(GAP = mean(Global_active_power))
energyWint <- energy %>% filter(hour(Time) > 8 & hour(Time) < 22) %>% filter(xor(month(Date) < 4, month(Date) > 9)) %>% group_by(Date) %>% summarise(GAP = mean(Global_active_power))
energySum <- cbind(energySum, "time"=1:nrow(energySum))
energySum
#ggplot(data = energySum) + geom_point(mapping = aes(x = time, y = GAP))
model = lm(GAP ~ time, data = energySum)
#plot(GAP ~ observation, data = energySum)
#abline(model)
energyWint
energyWint <- cbind(energyWint, "time"=1:nrow(energyWint))
#ggplot(data = energyWint) + geom_point(mapping = aes(x = time, y = GAP))
model2 = lm(GAP ~ time, data = energyWint)
plot(time ~ GAP, data = energyWint, xaxt=)
library(lubridate)
energy <- read_delim("/Users/bing/Desktop/household_power_consumption.txt", delim=";",
col_types=cols( Date = col_date(format="%d/%m/%Y"))
)
energy <- na.omit(energy)
energySum <- energy %>% filter(hour(Time) > 8 & hour(Time) < 22) %>% filter(month(Date) > 3 & month(Date) < 10) %>% group_by(Date) %>% summarise(GAP = mean(Global_active_power))
energyWint <- energy %>% filter(hour(Time) > 8 & hour(Time) < 22) %>% filter(xor(month(Date) < 4, month(Date) > 9)) %>% group_by(Date) %>% summarise(GAP = mean(Global_active_power))
energySum <- cbind(energySum, "time"=1:nrow(energySum))
energySum
#ggplot(data = energySum) + geom_point(mapping = aes(x = time, y = GAP))
model = lm(GAP ~ time, data = energySum)
#plot(GAP ~ observation, data = energySum)
#abline(model)
energyWint
energyWint <- cbind(energyWint, "time"=1:nrow(energyWint))
#ggplot(data = energyWint) + geom_point(mapping = aes(x = time, y = GAP))
model2 = lm(time ~ GAP, data = energyWint)
plot(time ~ GAP, data = energyWint, xaxt=)
library(lubridate)
energy <- read_delim("/Users/bing/Desktop/household_power_consumption.txt", delim=";",
col_types=cols( Date = col_date(format="%d/%m/%Y"))
)
energy <- na.omit(energy)
energySum <- energy %>% filter(hour(Time) > 8 & hour(Time) < 22) %>% filter(month(Date) > 3 & month(Date) < 10) %>% group_by(Date) %>% summarise(GAP = mean(Global_active_power))
energyWint <- energy %>% filter(hour(Time) > 8 & hour(Time) < 22) %>% filter(xor(month(Date) < 4, month(Date) > 9)) %>% group_by(Date) %>% summarise(GAP = mean(Global_active_power))
energySum <- cbind(energySum, "time"=1:nrow(energySum))
energySum
#ggplot(data = energySum) + geom_point(mapping = aes(x = time, y = GAP))
model = lm(GAP ~ time, data = energySum)
#plot(GAP ~ observation, data = energySum)
#abline(model)
energyWint
energyWint <- cbind(energyWint, "time"=1:nrow(energyWint))
#ggplot(data = energyWint) + geom_point(mapping = aes(x = time, y = GAP))
model2 = lm(time ~ GAP, data = energyWint)
plot(time ~ GAP, data = energyWint, xaxt='n')
points(time ~ GAP, data = energyWint, col = 2)
abline(model2)
abline(model)
